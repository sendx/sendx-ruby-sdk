=begin
#SendX REST API

## Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 

The version of the OpenAPI document: 1.0.1
Contact: support@sendx.io
Generated by: https://openapi-generator.tech
Generator version: 7.8.0

=end

require 'spec_helper'
require 'json'

# Unit tests for SendX::ListApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ListApi' do
  before do
    # run before each test
    @api_instance = SendX::ListApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ListApi' do
    it 'should create an instance of ListApi' do
      expect(@api_instance).to be_instance_of(SendX::ListApi)
    end
  end

  # unit tests for create_list
  # Create List
  # Create a new list.
  # @param list_request 
  # @param [Hash] opts the optional parameters
  # @return [CreateResponse]
  describe 'create_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_list
  # Delete List
  # Deletes a specific list by its ID.
  # @param list_id The ID of the list you want to delete
  # @param [Hash] opts the optional parameters
  # @return [DeleteResponse]
  describe 'delete_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_all_lists
  # Get All Lists
  # Retrieve all lists for the account.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :offset Offset for pagination.
  # @option opts [Integer] :limit Limit the number of results returned.
  # @option opts [String] :search Search term to filter lists.
  # @return [Array<ListModel>]
  describe 'get_all_lists test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_list_by_id
  # Get List
  # Retrieve a specific list by its ID.
  # @param list_id The ID of the list you want to retrieve
  # @param [Hash] opts the optional parameters
  # @return [ListModel]
  describe 'get_list_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_list
  # Update List
  # Update an existing list by its ID.
  # @param list_request 
  # @param list_id The ID of the list to be updated.
  # @param [Hash] opts the optional parameters
  # @return [Response]
  describe 'update_list test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
